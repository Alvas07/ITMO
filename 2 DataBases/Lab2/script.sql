BEGIN;

-- TASK 1 
-- Сделать запрос для получения атрибутов из указанных таблиц, применив фильтры по указанным условиям:
-- Таблицы: Н_ЛЮДИ, Н_СЕССИЯ.
-- Вывести атрибуты: Н_ЛЮДИ.ИМЯ, Н_СЕССИЯ.УЧГОД.
-- Фильтры (AND):
-- a) Н_ЛЮДИ.ФАМИЛИЯ = Ёлкин.
-- b) Н_СЕССИЯ.ЧЛВК_ИД < 151200.
-- Вид соединения: RIGHT JOIN.

SELECT "Н_ЛЮДИ"."ИМЯ", "Н_СЕССИЯ"."УЧГОД" 
FROM "Н_ЛЮДИ"
	RIGHT JOIN "Н_СЕССИЯ" ON "Н_ЛЮДИ"."ИД" = "Н_СЕССИЯ"."ЧЛВК_ИД"
WHERE "Н_ЛЮДИ"."ФАМИЛИЯ" = 'Ëлкин'
	AND "Н_СЕССИЯ"."ЧЛВК_ИД" < 151200;

-- TASK 2
-- Сделать запрос для получения атрибутов из указанных таблиц, применив фильтры по указанным условиям:
-- Таблицы: Н_ЛЮДИ, Н_ВЕДОМОСТИ, Н_СЕССИЯ.
-- Вывести атрибуты: Н_ЛЮДИ.ОТЧЕСТВО, Н_ВЕДОМОСТИ.ИД, Н_СЕССИЯ.УЧГОД.
-- Фильтры (AND):
-- a) Н_ЛЮДИ.ОТЧЕСТВО < Владимирович.
-- b) Н_ВЕДОМОСТИ.ИД < 39921.
-- c) Н_СЕССИЯ.УЧГОД < 2003/2004.
-- Вид соединения: INNER JOIN.

SELECT "Н_ЛЮДИ"."ОТЧЕСТВО", "Н_ВЕДОМОСТИ"."ИД", "Н_СЕССИЯ"."УЧГОД"
FROM "Н_ЛЮДИ"
	INNER JOIN "Н_ВЕДОМОСТИ" ON "Н_ЛЮДИ"."ИД" = "Н_ВЕДОМОСТИ"."ЧЛВК_ИД"
	INNER JOIN "Н_СЕССИЯ" ON "Н_ЛЮДИ"."ИД" = "Н_СЕССИЯ"."ЧЛВК_ИД"
WHERE "Н_ЛЮДИ"."ОТЧЕСТВО" < 'Владимирович'
	AND "Н_ВЕДОМОСТИ"."ИД" < 39921
	AND "Н_СЕССИЯ"."УЧГОД" < '2003/2004';

-- TASK 3
-- Вывести число студентов ФКТИУ, которые младше 20 лет.
-- Ответ должен содержать только одно число.

SELECT COUNT(*)
FROM "Н_ЛЮДИ"
	INNER JOIN "Н_ВЕДОМОСТИ" ON "Н_ЛЮДИ"."ИД" = "Н_ВЕДОМОСТИ"."ЧЛВК_ИД"
	INNER JOIN "Н_ОТДЕЛЫ" ON "Н_ВЕДОМОСТИ"."ОТД_ИД" = "Н_ОТДЕЛЫ"."ИД"
WHERE "Н_ОТДЕЛЫ"."КОРОТКОЕ_ИМЯ" = 'КТиУ'
	AND DATE_PART('year', AGE("Н_ЛЮДИ"."ДАТА_РОЖДЕНИЯ")) < 20;

-- TASK 4
-- Выдать различные фамилии людей и число людей с каждой из этих фамилий, ограничив список фамилиями, 
-- встречающимися ровно 10 раз на на заочной форме обучения.
-- Для реализации использовать подзапрос.

SELECT "Н_ЛЮДИ"."ФАМИЛИЯ", COUNT(*) AS "КОЛВО_ФАМ"
FROM "Н_ЛЮДИ"
	WHERE "Н_ЛЮДИ"."ФАМИЛИЯ" IN 
		(SELECT "Н_ЛЮДИ"."ФАМИЛИЯ"
		FROM "Н_ЛЮДИ"
			INNER JOIN "Н_УЧЕНИКИ" ON "Н_ЛЮДИ"."ИД" = "Н_УЧЕНИКИ"."ЧЛВК_ИД"
			INNER JOIN "Н_ПЛАНЫ" ON "Н_УЧЕНИКИ"."ПЛАН_ИД" = "Н_ПЛАНЫ"."ИД"
			INNER JOIN "Н_ФОРМЫ_ОБУЧЕНИЯ" ON "Н_ПЛАНЫ"."ФО_ИД" = "Н_ФОРМЫ_ОБУЧЕНИЯ"."ИД"
		WHERE "Н_ФОРМЫ_ОБУЧЕНИЯ"."НАИМЕНОВАНИЕ" = 'Заочная')
GROUP BY "Н_ЛЮДИ"."ФАМИЛИЯ"
	HAVING COUNT(*) = 10;

-- TASK 5
-- Выведите таблицу со средними оценками студентов группы 4100 (Номер, ФИО, Ср_оценка), 
-- у которых средняя оценка меньше средней оценк(е|и) в группе 3100.

SELECT  "Н_УЧЕНИКИ"."ИД", 
		"Н_ЛЮДИ"."ФАМИЛИЯ", 
		"Н_ЛЮДИ"."ИМЯ", 
		"Н_ЛЮДИ"."ОТЧЕСТВО",
		ROUND(AVG(CAST("Н_ВЕДОМОСТИ"."ОЦЕНКА" AS INT)), 2) AS "СР_ОЦЕНКА"
FROM "Н_УЧЕНИКИ"
	INNER JOIN "Н_ЛЮДИ" ON "Н_УЧЕНИКИ"."ЧЛВК_ИД" = "Н_ЛЮДИ"."ИД"
	LEFT JOIN "Н_ВЕДОМОСТИ" ON "Н_УЧЕНИКИ"."ЧЛВК_ИД" = "Н_ВЕДОМОСТИ"."ЧЛВК_ИД"
WHERE "Н_УЧЕНИКИ"."ГРУППА" = '4100' AND "Н_ВЕДОМОСТИ"."ОЦЕНКА" ~ '^[0-5]$'
GROUP BY "Н_УЧЕНИКИ"."ИД", "Н_ЛЮДИ"."ФАМИЛИЯ", "Н_ЛЮДИ"."ИМЯ", "Н_ЛЮДИ"."ОТЧЕСТВО"
HAVING ROUND(AVG(CAST("Н_ВЕДОМОСТИ"."ОЦЕНКА" AS INT)), 2) <
	ROUND((SELECT AVG(CAST("Н_ВЕДОМОСТИ"."ОЦЕНКА" AS INT))
		FROM "Н_УЧЕНИКИ"
			LEFT JOIN "Н_ВЕДОМОСТИ" ON "Н_УЧЕНИКИ"."ЧЛВК_ИД" = "Н_ВЕДОМОСТИ"."ЧЛВК_ИД"
		WHERE "Н_УЧЕНИКИ"."ГРУППА" = '3100' AND "Н_ВЕДОМОСТИ"."ОЦЕНКА" ~ '^[0-5]$'), 2);

-- TASK 6
-- Получить список студентов, отчисленных после первого сентября 2012 года с очной 
-- формы обучения (специальность: Программная инженерия). В результат включить:
-- номер группы;
-- номер, фамилию, имя и отчество студента;
-- номер пункта приказа;
-- Для реализации использовать подзапрос с IN.

SELECT  "Н_УЧЕНИКИ"."ГРУППА",
		"Н_УЧЕНИКИ"."ИД",
		"Н_ЛЮДИ"."ФАМИЛИЯ", 
		"Н_ЛЮДИ"."ИМЯ", 
		"Н_ЛЮДИ"."ОТЧЕСТВО",
		"Н_УЧЕНИКИ"."П_ПРКОК_ИД"
FROM "Н_УЧЕНИКИ"
	INNER JOIN "Н_ЛЮДИ" ON "Н_УЧЕНИКИ"."ЧЛВК_ИД" = "Н_ЛЮДИ"."ИД"
WHERE "Н_УЧЕНИКИ"."ИД" IN 
		(SELECT "Н_УЧЕНИКИ"."ИД" 
			FROM "Н_УЧЕНИКИ"
				INNER JOIN "Н_ПЛАНЫ" ON "Н_УЧЕНИКИ"."ПЛАН_ИД" = "Н_ПЛАНЫ"."ИД"
				INNER JOIN "Н_ФОРМЫ_ОБУЧЕНИЯ" ON "Н_ПЛАНЫ"."ФО_ИД" = "Н_ФОРМЫ_ОБУЧЕНИЯ"."ИД"
			WHERE "Н_ФОРМЫ_ОБУЧЕНИЯ"."НАИМЕНОВАНИЕ" = 'Очная') AND
		"Н_УЧЕНИКИ"."ИД" IN
		(SELECT "Н_УЧЕНИКИ"."ИД"
			FROM "Н_УЧЕНИКИ"
			WHERE "Н_УЧЕНИКИ"."ПРИЗНАК" = 'отчисл' AND
				"Н_УЧЕНИКИ"."СОСТОЯНИЕ" = 'утвержден' AND
				CAST("Н_УЧЕНИКИ"."КОНЕЦ_ПО_ПРИКАЗУ" AS DATE) > '2012-09-01') AND
		"Н_УЧЕНИКИ"."ИД" IN
		(SELECT "Н_УЧЕНИКИ"."ИД"
			FROM "Н_УЧЕНИКИ"
				INNER JOIN "Н_ПЛАНЫ" ON "Н_УЧЕНИКИ"."ПЛАН_ИД" = "Н_ПЛАНЫ"."ИД"
				INNER JOIN "Н_НАПРАВЛЕНИЯ_СПЕЦИАЛ" ON "Н_ПЛАНЫ"."НАПС_ИД" = "Н_НАПРАВЛЕНИЯ_СПЕЦИАЛ"."ИД"
				INNER JOIN "Н_НАПР_СПЕЦ" ON "Н_НАПРАВЛЕНИЯ_СПЕЦИАЛ"."НС_ИД" = "Н_НАПР_СПЕЦ"."ИД"
			WHERE "Н_НАПР_СПЕЦ"."НАИМЕНОВАНИЕ" = 'Программная инженерия');

-- TASK 7
-- Вывести список студентов, имеющих одинаковые имена, но не совпадающие даты рождения.
SELECT 	"Н_ЛЮДИ"."ИМЯ",
		COUNT(DISTINCT "Н_ЛЮДИ"."ДАТА_РОЖДЕНИЯ") AS "КОЛВО_ДР"
FROM "Н_ЛЮДИ"
GROUP BY "Н_ЛЮДИ"."ИМЯ"
HAVING COUNT(DISTINCT "Н_ЛЮДИ"."ДАТА_РОЖДЕНИЯ") > 1;

END;