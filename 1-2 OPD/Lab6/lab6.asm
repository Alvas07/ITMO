ORG 0x0 ; Инициализация векторов прерывания
V0: WORD $DEFAULT, 0x180 ; Вектор прерывания #0
V1: WORD $INT1, 0x180 ; Вектор прерывания #1
V2: WORD $DEFAULT, 0x180 ; Вектор прерывания #2
V3: WORD $INT3, 0x180 ; Вектор прерывания #3
V4: WORD $DEFAULT, 0x180 ; Вектор прерывания #4
V5: WORD $DEFAULT, 0x180 ; Вектор прерывания #5
V6: WORD $DEFAULT, 0x180 ; Вектор прерывания #6
V7: WORD $DEFAULT, 0x180 ; Вектор прерывания #7

DEFAULT: IRET ; Обработка прерываний по умолчанию

ORG 0x03A ; Инициализация необходимых переменных
X: WORD ?
MIN: WORD 0xFFFD ; Минимальное значение по ОДЗ (-60)
MAX: WORD 0x0042 ; Максимальное значение по ОДЗ (66)

ORG 0x20 ; Начало программы
START:  DI ; Запрет прерываний
		CLA
		LD #0x9 ; Загрузка в аккумулятор MR (1000|0001=1001) - разрешение прерываний и вектор #1
		OUT 3 ; Разрешение прерываний для ВУ-1
		LD #0xB ; Загрузка в аккумулятор MR (1000|0011=1011) - разрешение прерываний и вектор #3
		OUT 7 ; Разрешение прерываний для ВУ-3
		EI ; Разрешение прерываний

MAIN:   DI ; Запрет прерываний
		LD $X ; Загружаем X
		INC ; Инкрементируем
		CALL CHECK ; Проверяем, что значение не вышло за границы ОДЗ или заменяем его
		ST $X ; Сохраняем новое значение X
		EI ; Разрешение прерываний
		JUMP MAIN ; Спин-луп

CHECK:  CMP $MIN ; Сравниваем X с минимумом по ОДЗ
		BPL CHECK_MAX ; Если X > MIN, то переход на сравнение с максимумом по ОДЗ
		JUMP LD_MIN ; Иначе будем загружать минимум по ОДЗ в X
		CHECK_MAX: CMP $MAX ; Сравниваем X с максимумом по ОДЗ
		BMI RETURN ; Если X < MAX, то переход на возврат, т.к. X лежит в ОДЗ
		LD_MIN: LD $MIN ; Иначе загружаем минимум по ОДЗ в X
		RETURN: RET

INT1:   DI ; Обработка прерывания на ВУ-1
		LD X ; Загрузили X
		NOP
		ASL ; Умножение на 2
		NEG ; Умножение на -1
		ADD #6 ; Прибавление 6
		NOP
		OUT 2 ; Вывод результата функции на ВУ-1
		EI ; Конец обработки прерывания на ВУ-1
		IRET ; Возврат из обработки прерывания

INT3:   DI ; Обработка прерывания на ВУ-3
		IN 6 ; Получение значения с ВУ-3
		NOP
		NEG ; Умножаем значение с ВУ-3 на -1
		ADD X ; Прибавляем X
		ST X ; Обновляем значение X
		NOP
		EI ; Конец обработки прерывания на ВУ-3
		IRET ; Возврат из обработки прерывания
